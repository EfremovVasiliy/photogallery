<?php

namespace Tests\Unit;

use App\Models\Post;
use App\Models\User;
use App\Services\LikeService\LikeService;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Artisan;
use Symfony\Component\HttpFoundation\ParameterBag;
use Tests\TestCase;

class LikeServiceTest extends TestCase
{
    private LikeService $likeService;
    private User $user;
    private Post $post;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Artisan::call('migrate');
        Artisan::call('migrate:refresh');
        Artisan::call('db:seed');
        $this->likeService = App::make(LikeService::class);
        $this->user = User::factory()->create();
        $this->post = Post::factory()->create();
    }

    public function test_addLikeToPost(): void
    {
        $user = $this->user;

        $this->post->user_id = $this->user->id;
        $this->post->save();

        $request = new Request();
        $request->setUserResolver(function() use ($user) { return $user; });
        $json = new ParameterBag(['postId' => $this->post->id]);
        $request->setJson($json);

        $this->likeService->addLikeToPost($request);

        $this->assertDatabaseHas('likes', ['user_id' => $user->id, 'post_id' => $this->post->id]);
    }

    public function test_removeLikeFromPost(): void
    {
        $user = $this->user;

        $this->post->user_id = $this->user->id;
        $this->post->save();

        $request = new Request();
        $request->setUserResolver(function() use ($user) { return $user; });
        $json = new ParameterBag(['postId' => $this->post->id]);
        $request->setJson($json);

        $this->likeService->addLikeToPost($request);

        $this->assertDatabaseHas('likes', ['user_id' => $user->id, 'post_id' => $this->post->id]);

        $this->likeService->removeLikeFromPost($request);

        $this->assertDatabaseMissing('likes', ['user_id' => $user->id, 'post_id' => $this->post->id]);
    }
}
