<?php

namespace Tests\Unit;

use App\Models\Post;
use App\Models\User;
use App\Services\PostService\PostService;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Http\Request;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\App;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Facades\Storage;
use Tests\TestCase;

class PostServiceTest extends TestCase
{
    private PostService $postService;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Artisan::call('migrate');
        Artisan::call('migrate:refresh');
        Artisan::call('db:seed');
        $this->postService = App::make(PostService::class);
    }

    public function test_getPostList(): void
    {
        $collection = $this->postService->getPostList();

        $this->assertInstanceOf(Collection::class, $collection);
    }

    public function test_findPostById(): void
    {
        $post = $this->postService->findPostById($id = 1);

        $this->assertInstanceOf(Post::class, $post);
        $this->assertEquals($id, $post->id);
    }

    public function test_createPost(): void
    {
        $user = User::factory()->create();
        $file = UploadedFile::fake()->image('image.png');

        $filename = 'uploads/'. $file->hashName();

        $request = new Request();
        $request->setUserResolver(function() use ($user) { return $user; });
        $request->title = 'title';
        $request->description = 'description';
        $request->file = $file;

        $post = $this->postService->createPost($request);

        $this->assertEquals($user->id, $post->user_id);
        Storage::disk('public')->assertExists($filename)->delete($filename);
    }
}
